// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: textChangePB.proto

#ifndef PROTOBUF_textChangePB_2eproto__INCLUDED
#define PROTOBUF_textChangePB_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace textChange {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_textChangePB_2eproto();
void protobuf_AssignDesc_textChangePB_2eproto();
void protobuf_ShutdownFile_textChangePB_2eproto();

class textChangeMessage;

enum textChangeMessage_changeTypeX {
  textChangeMessage_changeTypeX_UNDO = 1,
  textChangeMessage_changeTypeX_REDO = 2,
  textChangeMessage_changeTypeX_INSERT = 3,
  textChangeMessage_changeTypeX_DELETE = 4,
  textChangeMessage_changeTypeX_CURSORCHANGE = 5,
  textChangeMessage_changeTypeX_OTHERCTX = 6
};
bool textChangeMessage_changeTypeX_IsValid(int value);
const textChangeMessage_changeTypeX textChangeMessage_changeTypeX_changeTypeX_MIN = textChangeMessage_changeTypeX_UNDO;
const textChangeMessage_changeTypeX textChangeMessage_changeTypeX_changeTypeX_MAX = textChangeMessage_changeTypeX_OTHERCTX;
const int textChangeMessage_changeTypeX_changeTypeX_ARRAYSIZE = textChangeMessage_changeTypeX_changeTypeX_MAX + 1;

const ::google::protobuf::EnumDescriptor* textChangeMessage_changeTypeX_descriptor();
inline const ::std::string& textChangeMessage_changeTypeX_Name(textChangeMessage_changeTypeX value) {
  return ::google::protobuf::internal::NameOfEnum(
    textChangeMessage_changeTypeX_descriptor(), value);
}
inline bool textChangeMessage_changeTypeX_Parse(
    const ::std::string& name, textChangeMessage_changeTypeX* value) {
  return ::google::protobuf::internal::ParseNamedEnum<textChangeMessage_changeTypeX>(
    textChangeMessage_changeTypeX_descriptor(), name, value);
}
enum textChangeMessage_messageTriggerX {
  textChangeMessage_messageTriggerX_TIME = 1,
  textChangeMessage_messageTriggerX_NUMCHAR = 2,
  textChangeMessage_messageTriggerX_SPACE = 3,
  textChangeMessage_messageTriggerX_OTHERMTX = 4
};
bool textChangeMessage_messageTriggerX_IsValid(int value);
const textChangeMessage_messageTriggerX textChangeMessage_messageTriggerX_messageTriggerX_MIN = textChangeMessage_messageTriggerX_TIME;
const textChangeMessage_messageTriggerX textChangeMessage_messageTriggerX_messageTriggerX_MAX = textChangeMessage_messageTriggerX_OTHERMTX;
const int textChangeMessage_messageTriggerX_messageTriggerX_ARRAYSIZE = textChangeMessage_messageTriggerX_messageTriggerX_MAX + 1;

const ::google::protobuf::EnumDescriptor* textChangeMessage_messageTriggerX_descriptor();
inline const ::std::string& textChangeMessage_messageTriggerX_Name(textChangeMessage_messageTriggerX value) {
  return ::google::protobuf::internal::NameOfEnum(
    textChangeMessage_messageTriggerX_descriptor(), value);
}
inline bool textChangeMessage_messageTriggerX_Parse(
    const ::std::string& name, textChangeMessage_messageTriggerX* value) {
  return ::google::protobuf::internal::ParseNamedEnum<textChangeMessage_messageTriggerX>(
    textChangeMessage_messageTriggerX_descriptor(), name, value);
}
// ===================================================================

class textChangeMessage : public ::google::protobuf::Message {
 public:
  textChangeMessage();
  virtual ~textChangeMessage();

  textChangeMessage(const textChangeMessage& from);

  inline textChangeMessage& operator=(const textChangeMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const textChangeMessage& default_instance();

  void Swap(textChangeMessage* other);

  // implements Message ----------------------------------------------

  textChangeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const textChangeMessage& from);
  void MergeFrom(const textChangeMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef textChangeMessage_changeTypeX changeTypeX;
  static const changeTypeX UNDO = textChangeMessage_changeTypeX_UNDO;
  static const changeTypeX REDO = textChangeMessage_changeTypeX_REDO;
  static const changeTypeX INSERT = textChangeMessage_changeTypeX_INSERT;
  static const changeTypeX DELETE = textChangeMessage_changeTypeX_DELETE;
  static const changeTypeX CURSORCHANGE = textChangeMessage_changeTypeX_CURSORCHANGE;
  static const changeTypeX OTHERCTX = textChangeMessage_changeTypeX_OTHERCTX;
  static inline bool changeTypeX_IsValid(int value) {
    return textChangeMessage_changeTypeX_IsValid(value);
  }
  static const changeTypeX changeTypeX_MIN =
    textChangeMessage_changeTypeX_changeTypeX_MIN;
  static const changeTypeX changeTypeX_MAX =
    textChangeMessage_changeTypeX_changeTypeX_MAX;
  static const int changeTypeX_ARRAYSIZE =
    textChangeMessage_changeTypeX_changeTypeX_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  changeTypeX_descriptor() {
    return textChangeMessage_changeTypeX_descriptor();
  }
  static inline const ::std::string& changeTypeX_Name(changeTypeX value) {
    return textChangeMessage_changeTypeX_Name(value);
  }
  static inline bool changeTypeX_Parse(const ::std::string& name,
      changeTypeX* value) {
    return textChangeMessage_changeTypeX_Parse(name, value);
  }

  typedef textChangeMessage_messageTriggerX messageTriggerX;
  static const messageTriggerX TIME = textChangeMessage_messageTriggerX_TIME;
  static const messageTriggerX NUMCHAR = textChangeMessage_messageTriggerX_NUMCHAR;
  static const messageTriggerX SPACE = textChangeMessage_messageTriggerX_SPACE;
  static const messageTriggerX OTHERMTX = textChangeMessage_messageTriggerX_OTHERMTX;
  static inline bool messageTriggerX_IsValid(int value) {
    return textChangeMessage_messageTriggerX_IsValid(value);
  }
  static const messageTriggerX messageTriggerX_MIN =
    textChangeMessage_messageTriggerX_messageTriggerX_MIN;
  static const messageTriggerX messageTriggerX_MAX =
    textChangeMessage_messageTriggerX_messageTriggerX_MAX;
  static const int messageTriggerX_ARRAYSIZE =
    textChangeMessage_messageTriggerX_messageTriggerX_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  messageTriggerX_descriptor() {
    return textChangeMessage_messageTriggerX_descriptor();
  }
  static inline const ::std::string& messageTriggerX_Name(messageTriggerX value) {
    return textChangeMessage_messageTriggerX_Name(value);
  }
  static inline bool messageTriggerX_Parse(const ::std::string& name,
      messageTriggerX* value) {
    return textChangeMessage_messageTriggerX_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 senderID = 1;
  inline bool has_senderid() const;
  inline void clear_senderid();
  static const int kSenderIDFieldNumber = 1;
  inline ::google::protobuf::int32 senderid() const;
  inline void set_senderid(::google::protobuf::int32 value);

  // optional .textChange.textChangeMessage.changeTypeX changeType = 2;
  inline bool has_changetype() const;
  inline void clear_changetype();
  static const int kChangeTypeFieldNumber = 2;
  inline ::textChange::textChangeMessage_changeTypeX changetype() const;
  inline void set_changetype(::textChange::textChangeMessage_changeTypeX value);

  // optional .textChange.textChangeMessage.messageTriggerX messageTrigger = 3;
  inline bool has_messagetrigger() const;
  inline void clear_messagetrigger();
  static const int kMessageTriggerFieldNumber = 3;
  inline ::textChange::textChangeMessage_messageTriggerX messagetrigger() const;
  inline void set_messagetrigger(::textChange::textChangeMessage_messageTriggerX value);

  // optional int64 cursorLocationStart = 4;
  inline bool has_cursorlocationstart() const;
  inline void clear_cursorlocationstart();
  static const int kCursorLocationStartFieldNumber = 4;
  inline ::google::protobuf::int64 cursorlocationstart() const;
  inline void set_cursorlocationstart(::google::protobuf::int64 value);

  // optional int64 cursorLocationEnd = 5;
  inline bool has_cursorlocationend() const;
  inline void clear_cursorlocationend();
  static const int kCursorLocationEndFieldNumber = 5;
  inline ::google::protobuf::int64 cursorlocationend() const;
  inline void set_cursorlocationend(::google::protobuf::int64 value);

  // optional string contentModified = 6;
  inline bool has_contentmodified() const;
  inline void clear_contentmodified();
  static const int kContentModifiedFieldNumber = 6;
  inline const ::std::string& contentmodified() const;
  inline void set_contentmodified(const ::std::string& value);
  inline void set_contentmodified(const char* value);
  inline void set_contentmodified(const char* value, size_t size);
  inline ::std::string* mutable_contentmodified();
  inline ::std::string* release_contentmodified();
  inline void set_allocated_contentmodified(::std::string* contentmodified);

  // @@protoc_insertion_point(class_scope:textChange.textChangeMessage)
 private:
  inline void set_has_senderid();
  inline void clear_has_senderid();
  inline void set_has_changetype();
  inline void clear_has_changetype();
  inline void set_has_messagetrigger();
  inline void clear_has_messagetrigger();
  inline void set_has_cursorlocationstart();
  inline void clear_has_cursorlocationstart();
  inline void set_has_cursorlocationend();
  inline void clear_has_cursorlocationend();
  inline void set_has_contentmodified();
  inline void clear_has_contentmodified();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 senderid_;
  int changetype_;
  ::google::protobuf::int64 cursorlocationstart_;
  ::google::protobuf::int64 cursorlocationend_;
  ::std::string* contentmodified_;
  int messagetrigger_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_textChangePB_2eproto();
  friend void protobuf_AssignDesc_textChangePB_2eproto();
  friend void protobuf_ShutdownFile_textChangePB_2eproto();

  void InitAsDefaultInstance();
  static textChangeMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// textChangeMessage

// optional int32 senderID = 1;
inline bool textChangeMessage::has_senderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void textChangeMessage::set_has_senderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void textChangeMessage::clear_has_senderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void textChangeMessage::clear_senderid() {
  senderid_ = 0;
  clear_has_senderid();
}
inline ::google::protobuf::int32 textChangeMessage::senderid() const {
  return senderid_;
}
inline void textChangeMessage::set_senderid(::google::protobuf::int32 value) {
  set_has_senderid();
  senderid_ = value;
}

// optional .textChange.textChangeMessage.changeTypeX changeType = 2;
inline bool textChangeMessage::has_changetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void textChangeMessage::set_has_changetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void textChangeMessage::clear_has_changetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void textChangeMessage::clear_changetype() {
  changetype_ = 1;
  clear_has_changetype();
}
inline ::textChange::textChangeMessage_changeTypeX textChangeMessage::changetype() const {
  return static_cast< ::textChange::textChangeMessage_changeTypeX >(changetype_);
}
inline void textChangeMessage::set_changetype(::textChange::textChangeMessage_changeTypeX value) {
  assert(::textChange::textChangeMessage_changeTypeX_IsValid(value));
  set_has_changetype();
  changetype_ = value;
}

// optional .textChange.textChangeMessage.messageTriggerX messageTrigger = 3;
inline bool textChangeMessage::has_messagetrigger() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void textChangeMessage::set_has_messagetrigger() {
  _has_bits_[0] |= 0x00000004u;
}
inline void textChangeMessage::clear_has_messagetrigger() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void textChangeMessage::clear_messagetrigger() {
  messagetrigger_ = 1;
  clear_has_messagetrigger();
}
inline ::textChange::textChangeMessage_messageTriggerX textChangeMessage::messagetrigger() const {
  return static_cast< ::textChange::textChangeMessage_messageTriggerX >(messagetrigger_);
}
inline void textChangeMessage::set_messagetrigger(::textChange::textChangeMessage_messageTriggerX value) {
  assert(::textChange::textChangeMessage_messageTriggerX_IsValid(value));
  set_has_messagetrigger();
  messagetrigger_ = value;
}

// optional int64 cursorLocationStart = 4;
inline bool textChangeMessage::has_cursorlocationstart() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void textChangeMessage::set_has_cursorlocationstart() {
  _has_bits_[0] |= 0x00000008u;
}
inline void textChangeMessage::clear_has_cursorlocationstart() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void textChangeMessage::clear_cursorlocationstart() {
  cursorlocationstart_ = GOOGLE_LONGLONG(0);
  clear_has_cursorlocationstart();
}
inline ::google::protobuf::int64 textChangeMessage::cursorlocationstart() const {
  return cursorlocationstart_;
}
inline void textChangeMessage::set_cursorlocationstart(::google::protobuf::int64 value) {
  set_has_cursorlocationstart();
  cursorlocationstart_ = value;
}

// optional int64 cursorLocationEnd = 5;
inline bool textChangeMessage::has_cursorlocationend() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void textChangeMessage::set_has_cursorlocationend() {
  _has_bits_[0] |= 0x00000010u;
}
inline void textChangeMessage::clear_has_cursorlocationend() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void textChangeMessage::clear_cursorlocationend() {
  cursorlocationend_ = GOOGLE_LONGLONG(0);
  clear_has_cursorlocationend();
}
inline ::google::protobuf::int64 textChangeMessage::cursorlocationend() const {
  return cursorlocationend_;
}
inline void textChangeMessage::set_cursorlocationend(::google::protobuf::int64 value) {
  set_has_cursorlocationend();
  cursorlocationend_ = value;
}

// optional string contentModified = 6;
inline bool textChangeMessage::has_contentmodified() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void textChangeMessage::set_has_contentmodified() {
  _has_bits_[0] |= 0x00000020u;
}
inline void textChangeMessage::clear_has_contentmodified() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void textChangeMessage::clear_contentmodified() {
  if (contentmodified_ != &::google::protobuf::internal::kEmptyString) {
    contentmodified_->clear();
  }
  clear_has_contentmodified();
}
inline const ::std::string& textChangeMessage::contentmodified() const {
  return *contentmodified_;
}
inline void textChangeMessage::set_contentmodified(const ::std::string& value) {
  set_has_contentmodified();
  if (contentmodified_ == &::google::protobuf::internal::kEmptyString) {
    contentmodified_ = new ::std::string;
  }
  contentmodified_->assign(value);
}
inline void textChangeMessage::set_contentmodified(const char* value) {
  set_has_contentmodified();
  if (contentmodified_ == &::google::protobuf::internal::kEmptyString) {
    contentmodified_ = new ::std::string;
  }
  contentmodified_->assign(value);
}
inline void textChangeMessage::set_contentmodified(const char* value, size_t size) {
  set_has_contentmodified();
  if (contentmodified_ == &::google::protobuf::internal::kEmptyString) {
    contentmodified_ = new ::std::string;
  }
  contentmodified_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* textChangeMessage::mutable_contentmodified() {
  set_has_contentmodified();
  if (contentmodified_ == &::google::protobuf::internal::kEmptyString) {
    contentmodified_ = new ::std::string;
  }
  return contentmodified_;
}
inline ::std::string* textChangeMessage::release_contentmodified() {
  clear_has_contentmodified();
  if (contentmodified_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = contentmodified_;
    contentmodified_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void textChangeMessage::set_allocated_contentmodified(::std::string* contentmodified) {
  if (contentmodified_ != &::google::protobuf::internal::kEmptyString) {
    delete contentmodified_;
  }
  if (contentmodified) {
    set_has_contentmodified();
    contentmodified_ = contentmodified;
  } else {
    clear_has_contentmodified();
    contentmodified_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace textChange

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::textChange::textChangeMessage_changeTypeX>() {
  return ::textChange::textChangeMessage_changeTypeX_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::textChange::textChangeMessage_messageTriggerX>() {
  return ::textChange::textChangeMessage_messageTriggerX_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_textChangePB_2eproto__INCLUDED
