// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EVO.proto

#ifndef PROTOBUF_EVO_2eproto__INCLUDED
#define PROTOBUF_EVO_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace textChange {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_EVO_2eproto();
void protobuf_AssignDesc_EVO_2eproto();
void protobuf_ShutdownFile_EVO_2eproto();

class textChangeMessage;

// ===================================================================

class textChangeMessage : public ::google::protobuf::Message {
 public:
  textChangeMessage();
  virtual ~textChangeMessage();

  textChangeMessage(const textChangeMessage& from);

  inline textChangeMessage& operator=(const textChangeMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const textChangeMessage& default_instance();

  void Swap(textChangeMessage* other);

  // implements Message ----------------------------------------------

  textChangeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const textChangeMessage& from);
  void MergeFrom(const textChangeMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 cursorLocation = 1;
  inline bool has_cursorlocation() const;
  inline void clear_cursorlocation();
  static const int kCursorLocationFieldNumber = 1;
  inline ::google::protobuf::int64 cursorlocation() const;
  inline void set_cursorlocation(::google::protobuf::int64 value);

  // optional string contentModified = 2;
  inline bool has_contentmodified() const;
  inline void clear_contentmodified();
  static const int kContentModifiedFieldNumber = 2;
  inline const ::std::string& contentmodified() const;
  inline void set_contentmodified(const ::std::string& value);
  inline void set_contentmodified(const char* value);
  inline void set_contentmodified(const char* value, size_t size);
  inline ::std::string* mutable_contentmodified();
  inline ::std::string* release_contentmodified();
  inline void set_allocated_contentmodified(::std::string* contentmodified);

  // optional int64 numChars = 3;
  inline bool has_numchars() const;
  inline void clear_numchars();
  static const int kNumCharsFieldNumber = 3;
  inline ::google::protobuf::int64 numchars() const;
  inline void set_numchars(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:textChange.textChangeMessage)
 private:
  inline void set_has_cursorlocation();
  inline void clear_has_cursorlocation();
  inline void set_has_contentmodified();
  inline void clear_has_contentmodified();
  inline void set_has_numchars();
  inline void clear_has_numchars();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cursorlocation_;
  ::std::string* contentmodified_;
  ::google::protobuf::int64 numchars_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_EVO_2eproto();
  friend void protobuf_AssignDesc_EVO_2eproto();
  friend void protobuf_ShutdownFile_EVO_2eproto();

  void InitAsDefaultInstance();
  static textChangeMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// textChangeMessage

// optional int64 cursorLocation = 1;
inline bool textChangeMessage::has_cursorlocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void textChangeMessage::set_has_cursorlocation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void textChangeMessage::clear_has_cursorlocation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void textChangeMessage::clear_cursorlocation() {
  cursorlocation_ = GOOGLE_LONGLONG(0);
  clear_has_cursorlocation();
}
inline ::google::protobuf::int64 textChangeMessage::cursorlocation() const {
  return cursorlocation_;
}
inline void textChangeMessage::set_cursorlocation(::google::protobuf::int64 value) {
  set_has_cursorlocation();
  cursorlocation_ = value;
}

// optional string contentModified = 2;
inline bool textChangeMessage::has_contentmodified() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void textChangeMessage::set_has_contentmodified() {
  _has_bits_[0] |= 0x00000002u;
}
inline void textChangeMessage::clear_has_contentmodified() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void textChangeMessage::clear_contentmodified() {
  if (contentmodified_ != &::google::protobuf::internal::kEmptyString) {
    contentmodified_->clear();
  }
  clear_has_contentmodified();
}
inline const ::std::string& textChangeMessage::contentmodified() const {
  return *contentmodified_;
}
inline void textChangeMessage::set_contentmodified(const ::std::string& value) {
  set_has_contentmodified();
  if (contentmodified_ == &::google::protobuf::internal::kEmptyString) {
    contentmodified_ = new ::std::string;
  }
  contentmodified_->assign(value);
}
inline void textChangeMessage::set_contentmodified(const char* value) {
  set_has_contentmodified();
  if (contentmodified_ == &::google::protobuf::internal::kEmptyString) {
    contentmodified_ = new ::std::string;
  }
  contentmodified_->assign(value);
}
inline void textChangeMessage::set_contentmodified(const char* value, size_t size) {
  set_has_contentmodified();
  if (contentmodified_ == &::google::protobuf::internal::kEmptyString) {
    contentmodified_ = new ::std::string;
  }
  contentmodified_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* textChangeMessage::mutable_contentmodified() {
  set_has_contentmodified();
  if (contentmodified_ == &::google::protobuf::internal::kEmptyString) {
    contentmodified_ = new ::std::string;
  }
  return contentmodified_;
}
inline ::std::string* textChangeMessage::release_contentmodified() {
  clear_has_contentmodified();
  if (contentmodified_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = contentmodified_;
    contentmodified_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void textChangeMessage::set_allocated_contentmodified(::std::string* contentmodified) {
  if (contentmodified_ != &::google::protobuf::internal::kEmptyString) {
    delete contentmodified_;
  }
  if (contentmodified) {
    set_has_contentmodified();
    contentmodified_ = contentmodified;
  } else {
    clear_has_contentmodified();
    contentmodified_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 numChars = 3;
inline bool textChangeMessage::has_numchars() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void textChangeMessage::set_has_numchars() {
  _has_bits_[0] |= 0x00000004u;
}
inline void textChangeMessage::clear_has_numchars() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void textChangeMessage::clear_numchars() {
  numchars_ = GOOGLE_LONGLONG(0);
  clear_has_numchars();
}
inline ::google::protobuf::int64 textChangeMessage::numchars() const {
  return numchars_;
}
inline void textChangeMessage::set_numchars(::google::protobuf::int64 value) {
  set_has_numchars();
  numchars_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace textChange

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EVO_2eproto__INCLUDED
